name: create release test
run-name: ${{ github.actor }} is releasing
on:
  release:
    types: [created, edited]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile main.py
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-main
        path: dist/main*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: ${{ matrix.os }}-main

    - name: Create release
      uses: actions/upload-release-asset@v3
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ runner.temp }}/main*
        asset_name: ${{ matrix.os }}-main
        asset_content_type: application/octet-stream
